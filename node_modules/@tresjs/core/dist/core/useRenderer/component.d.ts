import { ShadowMapType, TextureEncoding, ToneMapping } from 'three';
import { PropType } from 'vue';
/**
 * Vue component for rendering a Tres component.
 */
export declare const TresCanvas: import("vue").DefineComponent<{
    shadows: BooleanConstructor;
    shadowMapType: PropType<ShadowMapType>;
    physicallyCorrectLights: BooleanConstructor;
    outputEncoding: PropType<TextureEncoding>;
    toneMapping: PropType<ToneMapping>;
    toneMappingExposure: NumberConstructor;
    context: PropType<WebGLRenderingContext>;
    powerPreference: PropType<"high-performance" | "low-power" | "default">;
    preserveDrawingBuffer: BooleanConstructor;
    clearColor: StringConstructor;
    windowSize: BooleanConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}> | undefined, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    shadows: BooleanConstructor;
    shadowMapType: PropType<ShadowMapType>;
    physicallyCorrectLights: BooleanConstructor;
    outputEncoding: PropType<TextureEncoding>;
    toneMapping: PropType<ToneMapping>;
    toneMappingExposure: NumberConstructor;
    context: PropType<WebGLRenderingContext>;
    powerPreference: PropType<"high-performance" | "low-power" | "default">;
    preserveDrawingBuffer: BooleanConstructor;
    clearColor: StringConstructor;
    windowSize: BooleanConstructor;
}>>, {
    shadows: boolean;
    physicallyCorrectLights: boolean;
    preserveDrawingBuffer: boolean;
    windowSize: boolean;
}>;
