import { useRenderLoop } from '@tresjs/core';
import { Camera, WebGLRenderer } from 'three';
import { OrbitControls as OrbitControlsImp } from 'three-stdlib';
import { inject, type Ref, unref, watch } from 'vue';
declare const _sfc_main: import("vue").DefineComponent<{}, {
    controls: OrbitControlsImp;
    camera: Ref<Camera> | undefined;
    renderer: Ref<WebGLRenderer> | undefined;
    readonly useRenderLoop: typeof useRenderLoop;
    readonly Camera: typeof Camera;
    readonly WebGLRenderer: typeof WebGLRenderer;
    readonly OrbitControlsImp: typeof OrbitControlsImp;
    inject: typeof inject;
    unref: typeof unref;
    watch: typeof watch;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
export default _sfc_main;
